{
    "link_dict": {
        "[1]": "https://blog.csdn.net/gududedabai",
        "[2]": "https://blog.csdn.net/gududedabai/category_12708765.html",
        "[3]": "https://blog.csdn.net/gududedabai/category_7755608.html",
        "[4]": "https://blog.csdn.net/gududedabai/category_7800985.html",
        "[5]": "https://so.csdn.net/so/search/s.do?q=%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD&t=all&o=vip&from_tracking_code=tag_word&from_code=app_blog_art",
        "[6]": "https://so.csdn.net/so/search/s.do?q=chatgpt&t=all&o=vip&from_tracking_code=tag_word&from_code=app_blog_art",
        "[7]": "https://so.csdn.net/so/search/s.do?q=AIGC&t=all&o=vip&from_tracking_code=tag_word&from_code=app_blog_art",
        "[8]": "https://so.csdn.net/so/search/s.do?q=gpt&t=all&o=vip&from_tracking_code=tag_word&from_code=app_blog_art",
        "[9]": "https://so.csdn.net/so/search/s.do?q=AI%E7%BC%96%E7%A8%8B&t=all&o=vip&from_tracking_code=tag_word&from_code=app_blog_art",
        "[10]": "https://so.csdn.net/so/search/s.do?q=spring+boot&t=all&o=vip&from_tracking_code=tag_word&from_code=app_blog_art",
        "[11]": "https://so.csdn.net/so/search/s.do?q=spring+cloud&t=all&o=vip&from_tracking_code=tag_word&from_code=app_blog_art",
        "[12]": "http://creativecommons.org/licenses/by-sa/4.0/",
        "[13]": "https://blog.csdn.net/gududedabai/category_7800985.html",
        "[14]": "https://blog.csdn.net/gududedabai/category_7755608.html",
        "[15]": "https://blog.csdn.net/gududedabai/category_12708765.html",
        "[16]": "https://blog.csdn.net/gududedabai/article/details/139889333",
        "[17]": "https://i-blog.csdnimg.cn/blog_migrate/e1e9757c25bba2fe85c2fb035abbdd32.png",
        "[18]": "https://platform.openai.com/signup",
        "[19]": "https://platform.openai.com/account/api-keys",
        "[20]": "https://portal.azure.com/",
        "[21]": "https://gitee.com/mirrors/ollama/blob/main/docs/api.md",
        "[22]": "https://github.com/jmorganca/ollama/blob/main/docs/api.md",
        "[23]": "https://blog.csdn.net/gududedabai/article/details/139899558?csdn_share_tail=%7B%22type%22%3A%22blog%22%2C%22rType%22%3A%22article%22%2C%22rId%22%3A%22139899558%22%2C%22source%22%3A%22gududedabai%22%7D",
        "[24]": "https://mall.csdn.net/vip",
        "[25]": "https://blog.csdn.net/gududedabai",
        "[26]": "https://blog.csdn.net/yugongpeng/article/details/139650427",
        "[27]": "https://blog.csdn.net/yugongpeng",
        "[28]": "https://blog.csdn.net/yugongpeng/article/details/139650427",
        "[29]": "https://blog.csdn.net/dengshengli123/article/details/144354706",
        "[30]": "https://blog.csdn.net/dengshengli123/article/details/144354706",
        "[31]": "https://blog.csdn.net/unravelmc/article/details/147513277",
        "[32]": "https://blog.csdn.net/unravelmc/article/details/147513277",
        "[33]": "https://blog.csdn.net/weixin_42417531/article/details/145580913",
        "[34]": "https://blog.csdn.net/weixin_42417531",
        "[35]": "https://blog.csdn.net/weixin_42417531/article/details/145580913",
        "[36]": "https://devpress.csdn.net/v1/article/detail/136287122",
        "[37]": "https://blog.csdn.net/m0_72803988",
        "[38]": "https://devpress.csdn.net/v1/article/detail/136287122",
        "[39]": "https://blog.csdn.net/2301_76168381/article/details/147478538",
        "[40]": "https://blog.csdn.net/2301_76168381/article/details/147478538",
        "[41]": "https://blog.csdn.net/qq_47422213/article/details/147492157",
        "[42]": "https://blog.csdn.net/qq_47422213/article/details/147492157",
        "[43]": "https://blog.csdn.net/u011046509/article/details/138289032",
        "[44]": "https://blog.csdn.net/u011046509",
        "[45]": "https://blog.csdn.net/u011046509/article/details/138289032",
        "[46]": "https://blog.csdn.net/liujianming90/article/details/137561189",
        "[47]": "https://blog.csdn.net/liujianming90",
        "[48]": "https://blog.csdn.net/liujianming90/article/details/137561189",
        "[49]": "https://blog.csdn.net/qq_43257103/article/details/147042987",
        "[50]": "https://blog.csdn.net/qq_43257103/article/details/147042987",
        "[51]": "https://blog.csdn.net/lssffy/article/details/147342449",
        "[52]": "https://blog.csdn.net/lssffy/article/details/147342449",
        "[53]": "https://blog.csdn.net/weixin_54925172/article/details/144150724",
        "[54]": "https://blog.csdn.net/weixin_54925172",
        "[55]": "https://blog.csdn.net/weixin_54925172/article/details/144150724",
        "[56]": "https://blog.csdn.net/m0_62051288/article/details/126221809",
        "[57]": "https://blog.csdn.net/m0_62051288",
        "[58]": "https://blog.csdn.net/m0_62051288/article/details/126221809",
        "[59]": "https://blog.csdn.net/layneyao/article/details/147469292",
        "[60]": "https://blog.csdn.net/layneyao/article/details/147469292",
        "[61]": "https://blog.csdn.net/qq_36120342/article/details/147381162",
        "[62]": "https://blog.csdn.net/qq_36120342/article/details/147381162",
        "[63]": "https://wenku.csdn.net/answer/6mby4kxrr4",
        "[64]": "https://wenku.csdn.net/answer/6mby4kxrr4",
        "[65]": "https://doker.blog.csdn.net/article/details/143954313",
        "[66]": "https://blog.csdn.net/leesinbad",
        "[67]": "https://doker.blog.csdn.net/article/details/143954313",
        "[68]": "https://blog.csdn.net/LLM88888888/article/details/147349778",
        "[69]": "https://blog.csdn.net/LLM88888888/article/details/147349778",
        "[70]": "https://devpress.csdn.net/v1/article/detail/134293973",
        "[71]": "https://blog.csdn.net/qq_41481367",
        "[72]": "https://devpress.csdn.net/v1/article/detail/134293973",
        "[73]": "https://blog.csdn.net/gududedabai/article/details/80756480",
        "[74]": "https://blog.csdn.net/gududedabai",
        "[75]": "https://blog.csdn.net/gududedabai/article/details/80756480",
        "[76]": "https://blog.csdn.net/gududedabai/article/details/92383146",
        "[77]": "https://blog.csdn.net/gududedabai",
        "[78]": "https://blog.csdn.net/gududedabai/article/details/92383146",
        "[79]": "https://blog.csdn.net/gududedabai/article/details/82377874",
        "[80]": "https://blog.csdn.net/gududedabai",
        "[81]": "https://blog.csdn.net/gududedabai/article/details/82377874",
        "[82]": "https://blog.csdn.net/gududedabai/article/details/81675736",
        "[83]": "https://blog.csdn.net/gududedabai",
        "[84]": "https://blog.csdn.net/gududedabai/article/details/81675736",
        "[85]": "https://waytronic.blog.csdn.net/article/details/147457122",
        "[86]": "https://blog.csdn.net/Waytronic_",
        "[87]": "https://waytronic.blog.csdn.net/article/details/147457122",
        "[88]": "https://blog.csdn.net/exlink2012/article/details/147456274",
        "[89]": "https://blog.csdn.net/exlink2012",
        "[90]": "https://blog.csdn.net/exlink2012/article/details/147456274",
        "[91]": "https://blog.csdn.net/ITmoster/article/details/147513395",
        "[92]": "https://blog.csdn.net/ITmoster",
        "[93]": "https://blog.csdn.net/ITmoster/article/details/147513395",
        "[94]": "https://www.csdn.net/company/index.html#about",
        "[95]": "https://www.csdn.net/company/index.html#recruit",
        "[96]": "https://fsc-p05.txscrm.com/T8PN8SFII7W",
        "[97]": "https://marketing.csdn.net/questions/Q2202181748074189855",
        "[98]": "https://csdn.s2.udesk.cn/im_client/?web_plugin_id=29181",
        "[99]": "http://www.beian.gov.cn/portal/registerSystemInfo?recordcode=11010502030143",
        "[100]": "http://beian.miit.gov.cn/publish/query/indexFirst.action",
        "[101]": "https://csdnimg.cn/release/live_fe/culture_license.png",
        "[102]": "https://csdnimg.cn/cdn/content-toolbar/csdn-ICP.png",
        "[103]": "http://www.bjjubao.org/",
        "[104]": "https://download.csdn.net/tutelage/home",
        "[105]": "https://cyberpolice.mps.gov.cn/",
        "[106]": "http://www.12377.cn/",
        "[107]": "https://chrome.google.com/webstore/detail/csdn%E5%BC%80%E5%8F%91%E8%80%85%E5%8A%A9%E6%89%8B/kfkdboecolemdjodhmhmcibjocfopejo?hl=zh-CN",
        "[108]": "https://blog.csdn.net/blogdevteam/article/details/126135357",
        "[109]": "https://www.csdn.net/company/index.html#statement",
        "[110]": "https://blog.csdn.net/blogdevteam/article/details/90369522",
        "[111]": "https://img-home.csdnimg.cn/images/20250103023206.png",
        "[112]": "https://img-home.csdnimg.cn/images/20250103023201.png",
        "[img113]": "https://profile-avatar.csdnimg.cn/1d7de46c1551424d803eebbb1c601f70_gududedabai.jpg!1",
        "[114]": "https://blog.csdn.net/gududedabai",
        "[115]": "https://blog.csdn.net/gududedabai",
        "[116]": "https://blog.csdn.net/gududedabai",
        "[117]": "https://im.csdn.net/chat/gududedabai",
        "[img118]": "https://i-operation.csdnimg.cn/images/2dd892a9769b4cce9c086db94eab887f.png",
        "[119]": "https://ai.csdn.net/",
        "[120]": "https://csdnimg.cn/release/blogv2/dist/pc/img/toolbar/reward.png",
        "[121]": "https://csdnimg.cn/release/blogv2/dist/pc/img/toolbar/reward.png",
        "[122]": "https://huggingface.co/spaces",
        "[123]": "https://docs._spring_.io/_spring_",
        "[124]": "https://blog.csdn.net/gududedabai/article/details/80756480",
        "[125]": "https://blog.csdn.net/gududedabai/article/details/109264178",
        "[126]": "https://blog.csdn.net/gududedabai/article/details/105540718",
        "[127]": "https://blog.csdn.net/gududedabai/article/details/80002088",
        "[128]": "https://blog.csdn.net/gududedabai/article/details/78637186",
        "[129]": "https://blog.csdn.net/gududedabai/category_12708719.html",
        "[130]": "https://blog.csdn.net/gududedabai/category_12708765.html",
        "[131]": "https://blog.csdn.net/gududedabai/category_12110513.html",
        "[132]": "https://blog.csdn.net/gududedabai/category_12489544.html",
        "[133]": "https://blog.csdn.net/gududedabai/category_12489546.html",
        "[134]": "https://blog.csdn.net/gududedabai/category_12362629.html",
        "[135]": "https://blog.csdn.net/gududedabai/category_12112808.html",
        "[136]": "https://blog.csdn.net/gududedabai/category_12110511.html",
        "[137]": "https://blog.csdn.net/gududedabai/category_10154232.html",
        "[138]": "https://blog.csdn.net/gududedabai/category_9668039.html",
        "[139]": "https://blog.csdn.net/gududedabai/category_9464335.html",
        "[140]": "https://blog.csdn.net/gududedabai/category_9360434.html",
        "[141]": "https://blog.csdn.net/gududedabai/category_9341903.html",
        "[142]": "https://blog.csdn.net/gududedabai/category_7028375.html",
        "[143]": "https://blog.csdn.net/gududedabai/category_7028378.html",
        "[144]": "https://blog.csdn.net/gududedabai/category_8227659.html",
        "[145]": "https://blog.csdn.net/gududedabai/category_7028384.html",
        "[146]": "https://blog.csdn.net/gududedabai/category_7755608.html",
        "[147]": "https://blog.csdn.net/gududedabai/category_7755620.html",
        "[148]": "https://blog.csdn.net/gududedabai/category_7028390.html",
        "[149]": "https://blog.csdn.net/gududedabai/category_7755617.html",
        "[150]": "https://blog.csdn.net/gududedabai/category_7755622.html",
        "[151]": "https://blog.csdn.net/gududedabai/category_7755623.html",
        "[152]": "https://blog.csdn.net/gududedabai/category_7758132.html",
        "[153]": "https://blog.csdn.net/gududedabai/category_7752853.html",
        "[154]": "https://blog.csdn.net/gududedabai/category_7755615.html",
        "[155]": "https://blog.csdn.net/gududedabai/category_7789939.html",
        "[156]": "https://blog.csdn.net/gududedabai/category_7798538.html",
        "[157]": "https://blog.csdn.net/gududedabai/category_7800985.html",
        "[158]": "https://blog.csdn.net/gududedabai/category_8113101.html",
        "[159]": "https://blog.csdn.net/gududedabai/category_7839172.html",
        "[160]": "https://blog.csdn.net/gududedabai/category_7919409.html",
        "[161]": "https://blog.csdn.net/gududedabai/category_7933575.html",
        "[162]": "https://blog.csdn.net/gududedabai/category_7028408.html",
        "[163]": "https://blog.csdn.net/gududedabai/category_7397555.html",
        "[164]": "https://blog.csdn.net/gududedabai/category_7028396.html",
        "[165]": "https://blog.csdn.net/gududedabai/category_7823200.html",
        "[166]": "https://blog.csdn.net/gududedabai/category_7028416.html",
        "[167]": "https://blog.csdn.net/gududedabai/category_8023443.html",
        "[168]": "https://blog.csdn.net/gududedabai/category_7028409.html",
        "[169]": "https://blog.csdn.net/gududedabai/category_7028415.html",
        "[170]": "https://blog.csdn.net/gududedabai/category_7823367.html",
        "[171]": "https://blog.csdn.net/gududedabai/category_7823362.html",
        "[172]": "https://blog.csdn.net/gududedabai/category_8109804.html",
        "[173]": "https://blog.csdn.net/gududedabai/category_7028412.html",
        "[174]": "https://blog.csdn.net/gududedabai/category_8126109.html",
        "[175]": "https://blog.csdn.net/gududedabai/category_7823732.html",
        "[176]": "https://blog.csdn.net/gududedabai/category_8341437.html",
        "[177]": "https://blog.csdn.net/gududedabai/category_8649464.html",
        "[178]": "https://blog.csdn.net/gududedabai/category_8654903.html",
        "[179]": "https://blog.csdn.net/gududedabai/article/details/83352106#comments_35618799",
        "[180]": "https://blog.csdn.net/hdc012345",
        "[181]": "https://blog.csdn.net/gududedabai/article/details/92383146#comments_34069246",
        "[182]": "https://blog.csdn.net/m0_73844172",
        "[183]": "https://blog.csdn.net/gududedabai/article/details/140026764#comments_33600228",
        "[184]": "https://blog.csdn.net/community_717",
        "[185]": "https://blog.csdn.net/gududedabai/article/details/100660916#comments_28297515",
        "[186]": "https://blog.csdn.net/weixin_50822640",
        "[187]": "https://blog.csdn.net/gududedabai/article/details/109264178#comments_27757050",
        "[188]": "https://blog.csdn.net/gududedabai",
        "[189]": "https://edu.csdn.net/skill/java",
        "[190]": "https://blog.csdn.net/weixin_66625287/article/details/147496984",
        "[191]": "https://blog.csdn.net/qq_57231208/article/details/147568366",
        "[192]": "https://blog.csdn.net/m0_60963435/article/details/147568179",
        "[193]": "https://blog.csdn.net/qq_58146006/article/details/147568324",
        "[194]": "https://blog.csdn.net/qq_54356614/article/details/147567748",
        "[195]": "https://blog.csdn.net/gududedabai/article/details/140894507",
        "[196]": "https://blog.csdn.net/gududedabai/article/details/140026764",
        "[197]": "https://blog.csdn.net/gududedabai/article/details/139907507",
        "[198]": "https://blog.csdn.net/gududedabai?type=blog&year=2024&month=08",
        "[199]": "https://blog.csdn.net/gududedabai?type=blog&year=2023&month=11",
        "[200]": "https://blog.csdn.net/gududedabai?type=blog&year=2022&month=11",
        "[201]": "https://blog.csdn.net/gududedabai?type=blog&year=2020&month=10",
        "[202]": "https://blog.csdn.net/gududedabai?type=blog&year=2019&month=12",
        "[203]": "https://blog.csdn.net/gududedabai?type=blog&year=2018&month=12",
        "[204]": "https://blog.csdn.net/gududedabai?type=blog&year=2017&month=12",
        "[205]": "https://blog.csdn.net/gududedabai/category_12708719.html",
        "[206]": "https://blog.csdn.net/gududedabai/category_12708765.html",
        "[207]": "https://blog.csdn.net/gududedabai/category_12110513.html",
        "[208]": "https://blog.csdn.net/gududedabai/category_12489544.html",
        "[209]": "https://blog.csdn.net/gududedabai/category_12489546.html",
        "[210]": "https://blog.csdn.net/gududedabai/category_12362629.html",
        "[211]": "https://blog.csdn.net/gududedabai/category_12112808.html",
        "[212]": "https://blog.csdn.net/gududedabai/category_12110511.html",
        "[213]": "https://blog.csdn.net/gududedabai/category_10154232.html",
        "[214]": "https://blog.csdn.net/gududedabai/category_9668039.html",
        "[215]": "https://blog.csdn.net/gududedabai/category_9464335.html",
        "[216]": "https://blog.csdn.net/gududedabai/category_9360434.html",
        "[217]": "https://blog.csdn.net/gududedabai/category_9341903.html",
        "[218]": "https://blog.csdn.net/gududedabai/category_7028375.html",
        "[219]": "https://blog.csdn.net/gududedabai/category_7028378.html",
        "[220]": "https://blog.csdn.net/gududedabai/category_8227659.html",
        "[221]": "https://blog.csdn.net/gududedabai/category_7028384.html",
        "[222]": "https://blog.csdn.net/gududedabai/category_7755608.html",
        "[223]": "https://blog.csdn.net/gududedabai/category_7755620.html",
        "[224]": "https://blog.csdn.net/gududedabai/category_7028390.html",
        "[225]": "https://blog.csdn.net/gududedabai/category_7755617.html",
        "[226]": "https://blog.csdn.net/gududedabai/category_7755622.html",
        "[227]": "https://blog.csdn.net/gududedabai/category_7755623.html",
        "[228]": "https://blog.csdn.net/gududedabai/category_7758132.html",
        "[229]": "https://blog.csdn.net/gududedabai/category_7752853.html",
        "[230]": "https://blog.csdn.net/gududedabai/category_7755615.html",
        "[231]": "https://blog.csdn.net/gududedabai/category_7789939.html",
        "[232]": "https://blog.csdn.net/gududedabai/category_7798538.html",
        "[233]": "https://blog.csdn.net/gududedabai/category_7800985.html",
        "[234]": "https://blog.csdn.net/gududedabai/category_8113101.html",
        "[235]": "https://blog.csdn.net/gududedabai/category_7839172.html",
        "[236]": "https://blog.csdn.net/gududedabai/category_7919409.html",
        "[237]": "https://blog.csdn.net/gududedabai/category_7933575.html",
        "[238]": "https://blog.csdn.net/gududedabai/category_7028408.html",
        "[239]": "https://blog.csdn.net/gududedabai/category_7397555.html",
        "[240]": "https://blog.csdn.net/gududedabai/category_7028396.html",
        "[241]": "https://blog.csdn.net/gududedabai/category_7823200.html",
        "[242]": "https://blog.csdn.net/gududedabai/category_7028416.html",
        "[243]": "https://blog.csdn.net/gududedabai/category_8023443.html",
        "[244]": "https://blog.csdn.net/gududedabai/category_7028409.html",
        "[245]": "https://blog.csdn.net/gududedabai/category_7028415.html",
        "[246]": "https://blog.csdn.net/gududedabai/category_7823367.html",
        "[247]": "https://blog.csdn.net/gududedabai/category_7823362.html",
        "[248]": "https://blog.csdn.net/gududedabai/category_8109804.html",
        "[249]": "https://blog.csdn.net/gududedabai/category_7028412.html",
        "[250]": "https://blog.csdn.net/gududedabai/category_8126109.html",
        "[251]": "https://blog.csdn.net/gududedabai/category_7823732.html",
        "[252]": "https://blog.csdn.net/gududedabai/category_8341437.html",
        "[253]": "https://blog.csdn.net/gududedabai/category_8649464.html",
        "[254]": "https://blog.csdn.net/gududedabai/category_8654903.html",
        "[255]": "https://blogdev.blog.csdn.net/article/details/122245662",
        "[256]": "https://bbs.csdn.net/forums/FreeZone",
        "[257]": "https://i.csdn.net/#/wallet/balance/recharge",
        "[img258]": "https://profile-avatar.csdnimg.cn/default.jpg!2",
        "[259]": "https://blog.csdn.net/gududedabai/article/details/139889333",
        "[img260]": "https://profile-avatar.csdnimg.cn/1d7de46c1551424d803eebbb1c601f70_gududedabai.jpg!1",
        "[261]": "https://blog.csdn.net/gududedabai",
        "[262]": "https://i.csdn.net/#/wallet/balance/recharge?utm_source=RewardVip",
        "[263]": "https://i.csdn.net/#/wallet/balance/recharge",
        "[264]": "https://ai.csdn.net?spm=1001.2101.3001.10583"
    },
    "links_part": [
        "springAI孵化(二)\n\n平凡之路无尽路[1]  已于 2024-06-23 14:03:12 修改\n 阅读量1.2k   收藏 29 \n  点赞数 25 \n分类专栏： AIGC[2] springcloud[3] java[4] 文章标签： 人工智能[5] chatgpt[6] AIGC[7] gpt[8] AI编程[9] spring boot[10] spring cloud[11]\n于 2024-06-22 22:40:50 首次发布\n版权声明：本文为博主原创文章，遵循CC 4.0 BY-SA[12]版权协议，转载请附上原文出处链接和本声明。 \n本文链接：<[16]>\n版权\n java 同时被 3 个专栏收录[13]\n29 篇文章\n订阅专栏\n springcloud[14]\n13 篇文章\n订阅专栏\n AIGC[15]\n5 篇文章\n订阅专栏\n**目录**\n一、spring AI 目的\n二、spring AI 来源\n三、sprig AI 是什么？\n四、spring AI中的 概念\n4.1、模型（Models）\n4.2、提示（Prompts）\n4.3、提示模板（Prompt Templates）\n4.4、令 牌（Tokens）\n4.5、输出解析（Output Parsing）\n4.6、链接调用（Chaining Calls）\n4.7、将数据引入 AI 模型\n4.8、检索增强生成\n4.9、评估 AI 响应\n五、spring AI应用\n5.1、配置\n5.1.1、OpenAI\n5.1.2、Azure OpenAI\n5.1.3、Ollama\n5.1.4、HuggingFace\n* * *\n#",
        " 5.1.4、HuggingFace\n1、简介 Hugging Face是一个提供自然语言处理（NLP）模型和工具的平台，它为研究人员和开发者提供 了许多预训练的模型、数据集和相关工具。以推动自然语言处理技术为目标的平台。\n2、配置 HUGGINGFACE_API_KEY=your_api_key_here 获取推理终端节点的终端节点 URL。可以在此处的推理终端节点的 UI 上找到它。 [122]\n3、引入架包\n<dependency>\n<groupId>org.springframework.ai</groupId>\n<artifactId>spring-ai-huggingface</artifactId>\n<version>0.8.0-SNAPSHOT</version>\n</dependency>\n底层封装了Huggingface的AI客户端\ndocs/api.md · Gitee 极速下载/ollama - Gitee.com[21]\nollama/docs/api.md at main · jmorganca/ollama \\(github.com\\) - ollama/docs/api.md at main · jmorganca/ollama (github.com)[22] api\nnote:这是2023年10月推出的第一版，最新版本以及更新非常丰富,24年4月开始引入国内模型，后续继续整理。\naigc基础概念（一\\ - aigc基础概念（一)[23]\")\n关注博主即可阅读全文 \n\n确定要放弃本次机会？ \n福利倒计时\n_:_ _:_\n 立减 ¥\n普通VIP年卡可用\n立即使用[24]\n 平凡之路无尽路[25]\njavascript:; - 关注 关注\n  *    25 \n点赞\n  *  \n踩\n  * javascript:; -    29\n收藏 \n觉得还不错?  一键收藏  \n  *  知道了\n 0 \n评论\n  * javascript:; -  分享\n复制链接\n分享到 QQ\n分享到新浪微博\n扫一扫 \n  * javascript:; - 打赏[120] 打赏\n打赏\n  * \n打赏[121] 打赏  举报\n 举报\n\n\n专栏目录\n使用 _Spring_ _AI_ 和 LLM 实现数据库查询[26]\n一览无遗[27]\n06-13  1859 \n在 LLM 的帮助下质疑数据库需要对元数据进行一些努力，并且对数据库包含的内容有一个粗略的了解。 _AI_ /LLM 不适合创建查询，因为 SQL 查询需要正确性。需要一个相当大的模型来获得所需的查询正确性，并且需要 GPU 加速才能进行生产性使用。设计良好的 UI，用户可以在其中拖放结果表中的表列，这可能是满足要求的不错选择。Angular Material Components 很好地支持拖放。[28]\n参与评论 您还未登录，请先 登录 后发表或查看评论\n_SpringAI_ 框架:简化Java开发者的 _AI_ 集成路径__spring_ _ai_ 集成[29]\n4-26\n_Spring_ _Boot_ 自动配置和启动器:_Spring_ _AI_ 为 _AI_ 模型和矢量存储提供了 _Spring_ _Boot_ 自动配置和启动器,简化了项目的配置和启动过程。 用于数据工程的ETL框架:_Spring_ _AI_ 还提供了用于数据工程的ETL _(_ Extract, Transform, Load _)_ 框架,为将数据加载到向量数据库提供了基础,有助于实现检索增强生成模式,使开发者能够将数据引入 _AI_ 模型以...[30]\n_Spring_ _AI_ 调用通义千问模型输出流报错解决方案[31]\n4-25\n_Spring_ _AI_ 的1.0.0 _-_ M7 已解决 1.0.0 _-_ M6 版本及之前的 _Spring_ _AI_ 的 Open _Ai_ Model 和阿里云百炼的部分接口存在兼容性问题,直接调用官方的Open _Ai_ ChatModel类就可以: 一、问题原因 _SpringAI_ 对接阿里云百炼平台时不支持stream流模式,function calling的stream模式返回的函数参数格式有问题,与open _AI_ 接口不兼容。 _二_ 、问...[32]\n_Spring_ _AI_ 相关[33]\nweixin_42417531的博客[34]\n02-11  2332 \n_Spring_ _AI_ 是 _Spring_ 团队推出的一个用于简化 _AI_ 应用开发的框架，支持多种 _AI_ 服务商（如 Open _AI_ 、Azure Open _AI_ 、Hugging Face、Bedrock 等），并提供统一的 API 进行交互。官网：[123] _-__ai_ /reference/模型推理（Inference）：支持文本、图像等多种 _AI_ 任务。聊天接口（Chat API）：封装 LLM（大型语言模型）聊天能力。Embedding 支持。[35]\n【 _Spring_ 实战】动手拥有自己的 _ai_ 小站！使用 _Spring_ _boot_ 整合 _Spring_ _Cloud_ Gateway实现对接open _ai_ 并实现令牌记量和限制对话次数[36]\n终于等到你啦~欢迎来到我的知识空间 这里是苏泽的成神之路[37]\n02-26  6297 \n_Spring_ _Cloud_ Gateway入门 了解API网关的概念和作用 API网关是一个中间层，用于在后端服务和客户端之间提供统一的访问接口。它扮演着流量控制、安全认证、请求转发和协议转换等角色，简化了微服务架构中的复杂性。API网关可以集中处理共享的功能，如身份验证、授权、请求转发和负载均衡，从而减轻了后端服务的负担。[38]\n手把手教你用 LangCh _ai_ n + Higress + Elasticsearch 构建 RAG 应用 _-_ CSD...[39]\n4-24\n在本文中,我们将仅使用 LangCh _ai_ n 的数据加载功能,RAG 检索能力由 Higress 提供的开箱即用的 _ai_ _-_ search 插件实现。 _ai_ _-_ search 插件不仅支持基于 Elasticsearch 的私有知识库搜索,还支持 Google、Bing、Quark 等主流搜索引擎的在线检索,以及 Arxiv 等学术文献的搜索。 4、RAG 流程分析 数据预处理阶段 在进行 RAG 查...[40]\n_SpringAI_ M6 _-_ 从入门 _-_ 媒体生成 _-_ 记忆存储 _-_ 工具调用 _-_ RAG _-_ 内容安全 _-_ 自定义拦 ...[41]\n4-25\n选择Web下的 _Spring_ Web模块和 _AI_ 下的Open _AI_ 模块 1 _)_ 、pom.xml 这里jdk的版本是17,_SpringAI_ 的版本是M6 <properties><java.version>17</java.version><_spring_ _-__ai_.version>1.0.0 _-_ M6</_spring_ _-__ai_.version></properties><dependencies><dependency><groupId>org._spring_ framework._boot_ </groupId><artifactId>_spring_ _-__boot_ _-_ st...[42]\n【 _Spring_ _AI_ 】02. _AI_ 概念[43]\nu011046509的博客[44]\n04-28  1426 \n本节介绍 _Spring_ _AI_ 使用的核心概念。我们建议仔细阅读它，以了解 _Spring_ _AI_ 如何实现背后的想法。[45]\n第六章 _Spring_ _AI_ 中文版[46]\nliujianming的博客[47]\n04-09  3616 \n如下面的代码片段所示，然后可以为您希望使用的一个或多个 _spring_ _-__ai_ 模块（例如 _spring_ _-__ai_ _-_ open _ai_ ）的Starter Dependencies进行无版本声明。和熟悉 JavaScript 生态系统的人的“create _-_ react _-_ app”命令一样， _Spring_ CLI 提供了一个用于创建基于 _Spring_ 的项目 _spring_ _boot_ new的命令。 _Spring_ _AI_ 清单 （BOM） 声明给定版本的 _Spring_ _AI_ 使用的所有依赖项的推荐版本。[48]\nJava8+_Spring_ _Boot_ + Vue + Langch _ai_ n4j 实现阿里云百炼平台 _AI_ 流式...[49]\n4-25\n在本文中,我们将介绍如何使用 _Spring_ _Boot_ 、Vue.js和Langch _ai_ n4j,实现与阿里云百炼平台的 _AI_ 流式对话对接。通过结合这些技术,我们将创建一个能够实时互动的 _AI_ 聊天应用。 这是一个基于 _Spring_ _Boot_ +Vue.js+ Langch _ai_ n4j 的智能对话系统,实现了类似 _ChatGPT_ 的流式交互体验。系统通过 阿里云百炼 qwen _-_ max 大模...[50]\nSEOFOMO调研揭示:2025年电商SEO如何利用 _人工智能_[51]\n4-20\nresponse = open _ai_.Completion.create _(_ model=“text _-_ davinci _-_ 003”, prompt=prompt, max_tokens=150 _)_ return response.choices[0].text.strip _(__)_ 示例调用 description = generate_product_description _(_ “Running Shoes”, “lightweight design, breathable mesh, durable sole” ...[52]\n_SpringAi_ 整合大模型 _(_ 进阶版 _)_[53]\nweixin_54925172的博客[54]\n11-30  869 \n进阶版是在基础的对话版之上进行新增功能。如果还没弄出基础版的，请参考。[55]\nJava 17新特性，是真的猛，惊呆了！[56]\nm0_62051288的博客[57]\n08-08  2098 \n平均而言，以 OptaPlanner 为例的基准测试结果表明：对于 G1GC（默认），Java 17 比 Java 11 快 8.66%，比 Java 16 快 2.41%。对于 ParallelGC，Java 17 比 Java 11 快 6.54%，比 Java 16 快 0.37%。Parallel GC 比 G1 GC 快 16.39%。结果并无太大的惊喜表现：最新的 JDK 更快，高吞吐量垃圾收集器比低延迟垃圾收集器更快。共计 5 本书，送给 5 位读者。...[58]\n_AIGC_ _(_ 生成式 _AI_ _)_ 技术全景图:从文本到图像的革命[59]\n4-24\n1. _AIGC_ 技术应用流程图 graph TD A[用户输入] _-__-_ > B{输入类型} B _-__-_ >|文本| C[文本生成模型 _(_ 如 _GPT_ 系列 _)_] B _-__-_ >|图像| D[图像生成模型 _(_ 如GANs、DALL _-_ E _)_] C _-__-_ > E[生成文本] D _-__-_ > F[生成图像] E _-__-_ > G[输出文本] F _-__-_ > G[输出图像] ...[60]\ndeepseek4j _-_ demo快速入门_eepseek4j systemmessage[61]\n4-23\n.addSystemMessage _(_ \"你的名字叫土豆\"_)_ // 添加用户消息.addUserMessage _(_ prompt _)_ // 设置最大生成 token 数,默认 2048.maxTokens _(_ 1000 _)_ // 设置响应格式,支持 JSON 结构化输出// .responseFormat _(_..._)_ // 可选// function calling// .tools _(_..._)_ // 可选.build _(__)_ ;returndeepSeekClient.chatFluxCompletion _(_...[62]\n使用 _springai_ 框架 集成 deepseek[63]\n02-27\n首先， _Spring_ _AI_ 是一个项目，可能还在 _孵化_ 阶段，它旨在简化在 _Spring_ 应用中集成 _AI_ 服务的过程。我需要确认用户是否了解 _Spring_ _AI_ 的基本用法，比如如何添加依赖、配置API密钥等。然后，DeepSeek作为 _AI_ 服务提供商，用户...[64]\n_Spring_ _AI_ 框架使用的核心概念[65]\n深圳市多克创新科技有限公司[66]\n11-21  1142 \n_Spring_ _AI_ 框架使用的核心概念[67]\n[特殊字符] _AI_ 大模型的 Prompt Engineering 原理:从基础到源码实践 _-_ CSD...[68]\n4-24\ngenerated_text = tokenizer.decode _(_ output[0], skip_special_tokens=True _)_ print _(_ generated_text _)_ 🧩 四、Prompt 的结构与组成要素 🎨 五、Prompt 设计原则 清晰明确:避免模糊表达 ❌ \"给我一些信息\" → ✅ \"提供过去一年 _AI_ 在医疗领域的最新研究成果\" ...[69]\n_Spring_ _AI_ _-_ 使用 _Spring_ 快速开发 _ChatGPT_ 应用[70]\nqq_41481367的博客[71]\n11-08  4万+ \n本篇文章将会对 _SpringAI_ 进行简单的介绍和使用，并通过 _Spring_ _Boot_ 来集成 _SpringAI_ 实际开发出一个简单的http对话接口。[72]\nFeign远程调用接口时报：Can not deserialize instance of java.util.ArrayList out of START_OBJECT token解决方案 热门推荐[73]\n平凡之路无尽路的博客[74]\n06-21  16万+ \n原因一，是远程客户端返回的数据类型与接收类型不一致。单数据类型无法返回复杂的数据类型。这里的关键词是ArrayList和START_OBJECT标记。您不能将单个对象反序列化为对象数组。试着理解这一点，你就会明白为什么。您只能将一组JSON对象反序列化为一个数组或POJO集合。请注意，虽然JSON对象由{ }大括号分隔，但数组由[ ]括号分隔，其中包含一些对象。因此，首先你先认真检查两个服务接口...[75]\nnacos配置注册中心时指定命名空间不起作用[76]\n平凡之路无尽路的博客[77]\n06-16  2万+ \n因为命名空间不适用于nacos 0.8。 Nacos客户端服务注册不划分命名空间，默认注册位于公共命名空间 下。 他被阿里设计的起初原因是：namespace主要是进行业务隔离的，多个业务或者部门可以用一个Nacos，但是数据都相互屏蔽。 因此并不是做服务和开发环境隔离的，目前没看到官方有这种需求的解决方法。 ...[78]\n群发邮件报：javax.m _ai_ l.SendF _ai_ ledException: Invalid Addresses解决办法[79]\n平凡之路无尽路的博客[80]\n09-06  1万+ \n第一次做发邮件功能， 遇到一个javam _ai_ l的问题： javax.m _ai_ l.SendF _ai_ ledException: Invalid Addresses 是在收件地址不对或不存在的情况下出现的，并且那些对的地址也不能发送出去；解决方案如下，捕获处理并重发 try{ //发送代码 }catch _(_ M _ai_ lSendException se _)_ { Exceptio...[81]\n_spring_ MVC接口接受前端传递参数数据类型总结[82]\n平凡之路无尽路的博客[83]\n08-14  6757 \n最近项目中处理前台数据时突然发现比较模糊这些概念，所以总结如下： 目录 一、 _spring_ MVC中controller参数是自动注入 _二_ 、接受前端传递的对象 1、从querystring中的参数中获取： 2、从请求体 _(_ body _)_ 中获取（及获取对象数据） 3、接收前端传递的数组 三、总结 一、 _spring_ MVC中controller参数是自动注入 在 _spring_ MVC中，contr...[84]\nWT2000T专业录音芯片：破解普通录音设备信息留存、合规安全与远程协作三大难题[85]\nWaytronic_的博客[86]\n04-23  957 \n在快节奏的现代商业环境中，会议是企业决策、创意碰撞和战略部署的核心场景。然而，传统会议记录方式常面临效率低、信息遗漏、回溯困难等痛点。如何确保会议内容被精准记录并高效利用？会议室专用录音芯片应运而生，以智能化、高保真、安全便捷的特性，成为企业高效办公的“隐形助手”。[87]\nPython项目 _-__-_ 基于计算机视觉的手势识别控制系统[88]\nexlink2012的专栏[89]\n04-23  2035 \n随着人机交互技术的快速发展，传统的键盘、鼠标等输入设备已经不能满足人们对自然、直观交互的需求。手势识别作为一种非接触式的人机交互方式，具有操作自然、交互直观的特点，在智能家居、游戏控制、虚拟现实等领域有着广泛的应用前景。 本项目旨在开发一个基于计算机视觉的手势识别控制系统，通过摄像头捕获用户的手部动作，实时识别手势类型，并将识别结果转化为相应的控制命令，实现对计算机或其他设备的非接触式控制。[90]\n_人工智能_ _(__AI_ _)_ 对网络管理的影响 最新发布[91]\nITmoster的博客[92]\n04-25  613 \n_AI_ 正从工具演变为网络管理的“核心大脑”，其价值不仅在于效率提升，更在于为复杂问题提供系统性解决方案。[93]\n  * 关于我们[94]\n  * 招贤纳士[95]\n  * 商务合作[96]\n  * 寻求报道[97]\n  *  400-660-0108\n  *  kefu@csdn.net\n  *  在线客服[98]\n  * 工作时间 8:30-22:00 \n\n\n  * 公安备案号11010502030143[99]\n  * 京ICP备19004658号[100]\n  * 京网文〔2020〕1039-165号[101]\n  * 经营性网站备案信息[102]\n  * 北京互联网违法和不良信息举报中心[103]\n  * 家长监护[104]\n  * 网络110报警服务[105]\n  * 中国互联网举报中心[106]\n  * Chrome商店下载[107]\n  * 账号管理规范[108]\n  * 版权与免责声明[109]\n  * 版权申诉[110]\n  * 出版物许可证[111]\n  * 营业执照[112]\n  * ©1999-2025北京创新乐知网络技术有限公司\n\n\nto_be_recognized_by_visual_llm§[114]\n平凡之路无尽路[115]\n博客等级  §\n码龄10年\n 软件工程领域优质创作者 102 \n\n原创[116]     562 \n\n点赞\n    1717 \n\n收藏\n    1万+ \n\n粉丝\n\n关注\n私信[117]\n§to_be_recognized_by_visual_llm§[119]\n##",
        "热门文章\n  * Feign远程调用接口时报：Can not deserialize instance of java.util.ArrayList out of START_OBJECT token解决方案  165785[124]\n  * springboot 不同请求方式下接收List 入参总结  41659[125]\n  * 微信公众号开发：获取openId和用户信息（完整版）  32268[126]\n  * Kafka学习总结（三）——kafka通信协议  32000[127]\n  * fastJson解析多层Json数据案例  31489[128]\n\n\n##",
        "分类专栏\n  *  反应式流[129] 3篇\n  *  AIGC[130] 5篇\n  *  架构设计[131] 6篇\n  *  网络安全[132] 4篇\n  *  互联网安全[133] 4篇\n  *  linux[134] 1篇\n  *  算法与数据结构[135] 2篇\n  *  设计方案[136] 1篇\n  *  反射[137] 1篇\n  *  tomcat[138] 1篇\n  *  活动[139] 1篇\n  *  深度学习[140]\n  *  授权认证[141] 1篇\n  *  数据库[142] 11篇\n  *  sql学习[143] 1篇\n  *  spring 源码分析[144] 8篇\n  *  spring框架[145] 21篇\n  *  springcloud[146] 13篇\n  *  springboot[147] 13篇\n  *  freemarker[148] 1篇\n  *  中间件[149] 13篇\n  *  redis[150] 3篇\n  *  dubbo[151] 3篇\n  *  java高并发实战[152] 9篇\n  *  Netty[153] 5篇\n  *  nginx[154] 3篇\n  *  深入JVM内核[155] 16篇\n  *  设计模式[156] 4篇\n  *  java[157] 29篇\n  *  分布式事务[158] 3篇\n  *  项目管理[159] 3篇\n  *  java8新特性[160] 3篇\n  *  代码优化[161] 6篇\n  *  微信公众号开发[162] 2篇\n  *  前端[163] 5篇\n  *  extjs[164] 1篇\n  *  jenkins系列[165] 1篇\n  *  git系列[166] 3篇\n  *  技术领导力[167] 3篇\n  *  日志设计[168] 1篇\n  *  云服务[169] 1篇\n  *  单元测试[170] 1篇\n  *  缓存[171] 2篇\n  *  异常[172] 2篇\n  *  Unity3D[173]\n  *  工具[174] 4篇\n  *  自我救赎[175] 3篇\n  *  运维[176] 3篇\n  *  Python[177] 5篇\n  *  网络通信[178]\n\n\n\n##",
        "最新评论\n  * Spring源码解析 - springMVC核心代码（一）[179]\n我随便来看看:[180] 流程写得很到位，就是欠缺一点点，还不够深入，比如request mapping handler mapping如何找handlermethod，又比如handleradaper具体执行流程，是否作者保留在2里面了\n  * nacos配置注册中心时指定命名空间不起作用[181]\n永远的.初学者:[182] 我滴个神\n  * springCloudalibabaAI孵化(一)[183]\nCSDN-Ada助手:[184] 推荐 Java 技能树：[189]?utm_source=AI_act_java\n  * springboot 配置RedisTemplate 报：Field redisTemplate in XXX required a bean of type ‘org.springframework[185]\nprintfi:[186] 可以 可以搞定了\n  * springboot 不同请求方式下接收List 入参总结[187]\n平凡之路无尽路:[188] 你的内部类是不是非静态，或者没有构造函数\n\n\n##",
        "大家在看\n  * ESP32 是一款功能强大的微控制器，支持 Wi-Fi 和蓝牙。以下是一个简单的 ESP32 示例，展示如何使用 Arduino IDE 编写代码，并通过串口输出信息。  635[190]\n  * 【核心复现】基于合作博弈的综合能源系统电-热-气协同优化运行策略（Matlab代码实现）[191]\n  * 重温TCP通信过程[192]\n  * 基于储能电站服务的冷热电多微网系统双层优化配置（Matlab代码实现）[193]\n  * Linux网络包接收流程详细解释[194]\n\n\n##",
        "最新文章\n  * 三、Spring-WebFlux实战案例-流式[195]\n  * springCloudalibabaAI孵化(一)[196]\n  * 一、企业级架构设计-archimate基础概念[197]\n\n\n2024年10篇[198]\n2023年10篇[199]\n2022年8篇[200]\n2020年11篇[201]\n2019年14篇[202]\n2018年93篇[203]\n2017年26篇[204]\n##",
        "分类专栏\n  *  反应式流[205] 3篇\n  *  AIGC[206] 5篇\n  *  架构设计[207] 6篇\n  *  网络安全[208] 4篇\n  *  互联网安全[209] 4篇\n  *  linux[210] 1篇\n  *  算法与数据结构[211] 2篇\n  *  设计方案[212] 1篇\n  *  反射[213] 1篇\n  *  tomcat[214] 1篇\n  *  活动[215] 1篇\n  *  深度学习[216]\n  *  授权认证[217] 1篇\n  *  数据库[218] 11篇\n  *  sql学习[219] 1篇\n  *  spring 源码分析[220] 8篇\n  *  spring框架[221] 21篇\n  *  springcloud[222] 13篇\n  *  springboot[223] 13篇\n  *  freemarker[224] 1篇\n  *  中间件[225] 13篇\n  *  redis[226] 3篇\n  *  dubbo[227] 3篇\n  *  java高并发实战[228] 9篇\n  *  Netty[229] 5篇\n  *  nginx[230] 3篇\n  *  深入JVM内核[231] 16篇\n  *  设计模式[232] 4篇\n  *  java[233] 29篇\n  *  分布式事务[234] 3篇\n  *  项目管理[235] 3篇\n  *  java8新特性[236] 3篇\n  *  代码优化[237] 6篇\n  *  微信公众号开发[238] 2篇\n  *  前端[239] 5篇\n  *  extjs[240] 1篇\n  *  jenkins系列[241] 1篇\n  *  git系列[242] 3篇\n  *  技术领导力[243] 3篇\n  *  日志设计[244] 1篇\n  *  云服务[245] 1篇\n  *  单元测试[246] 1篇\n  *  缓存[247] 2篇\n  *  异常[248] 2篇\n  *  Unity3D[249]\n  *  工具[250] 4篇\n  *  自我救赎[251] 3篇\n  *  运维[252] 3篇\n  *  Python[253] 5篇\n  *  网络通信[254]\n\n\n评论 \n被折叠的 为什么被折叠?[255] 到【灌水乐园】发言[256]\n查看更多评论\n添加红包 \n祝福语\n请填写红包祝福语或标题\n红包数量\n个\n红包个数最小为10个\n红包总金额\n元\n红包金额最低5元\n余额支付\n当前余额3.43元 前往充值 >[257]\n需支付：10.00元 \n取消 确定\n 下一步\n 知道了\n成就一亿技术人!\n领取后你会自动成为博主和红包主的粉丝 规则\nto_be_recognized_by_visual_llm§[259]\nhope_wisdom\n发出的红包 \n打赏作者§      to_be_recognized_by_visual_llm§[261] \n\n\n平凡之路无尽路\n你的鼓励将是我创作的最大动力\n\n\n¥1 ¥2 ¥4 ¥6 ¥10 ¥20\n扫码支付：¥1\n§ 获取中\n  扫码支付\n您的余额不足，请更换扫码支付或充值[262]\n打赏作者\n实付元\njavascript:; - 使用余额支付\n 点击重新获取\n扫码支付\n钱包余额 0\n\n抵扣说明：\n1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。  \n2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。\n余额充值[263]\n\n确定取消\n举报\n\n选择你想要举报的内容（必选）\n  * 内容涉黄\n  * 政治相关\n  * 内容抄袭\n  * 涉嫌广告\n  * 内容侵权\n  * 侮辱谩骂\n  * 样式问题\n  * 其他\n\n\n原文链接（必填）\n请选择具体原因（必选）\n  * 包含不实信息\n  * 涉及个人隐私\n\n\n请选择具体原因（必选）\n  * 侮辱谩骂\n  * 诽谤\n\n\n请选择具体原因（必选）\n  * 搬家样式\n  * 博文样式\n\n\n补充说明（选填）\n取消\n确定\n 点击体验  \nDeepSeekR1满血版[264]  下载APP 程序员都在用的中文IT技术交流社区 程序员都在用的中文IT技术交流社区 公众号 专业的中文 IT 技术社区，与千万技术人共成长 专业的中文 IT 技术社区，与千万技术人共成长 视频号 关注【CSDN】视频号，行业资讯、技术分享精彩不断，直播好礼送不停！ 关注【CSDN】视频号，行业资讯、技术分享精彩不断，直播好礼送不停！  客服  返回顶部"
    ],
    "contents": [
        " 一、spring AI 目的\nSpring AI 项目旨在简化包含人工智能功能的应用程序的开发，而不会产生不必要的复杂性。\n#",
        " 二、spring AI 来源\n  1. Spring AI 项目是一个实验性项目，旨在使用 Spring 框架的通用概念创建人工智能（AI）应用程序。它集成了 Azure OpenAI 和 OpenAI 作为后端，支持内容生成、代码生成、语义搜索和摘要等用例。\n  2. 从历史上看，Python 曾常用于访问以 C 和 C++ 等语言编写的AI算法，但现在生成式AI（如OpenAI的ChatGPT）使得使用HTTP访问预训练模型更加容易，使Java等编程语言更容易与AI算法交互，AI 不再需要数据科学家来收集数据和训练模型。。\n  3. 但是，用于 AI 解决方案（如 OpenAI 和 Azure OpenAI）的各种 Java 客户端 API 不同，这使得在这些解决方案之间切换变得更加困难\n  4. Spring AI在收到Python库的启发 提供了一个抽象层，构建在Python库LangChain和LlamaIndex的客户端API之上，以简化不同Java客户端API之间的切换。它遵循Spring项目的设计价值，如模块化、可扩展性和数据源集成。\n  5. Spring AI 提供多种功能，包括通用API与AI模型的集成、提示模板用于与AI模型交互、支持链接调用以解决更复杂的问题、输出分析功能以将输出转换为CSV或JSON格式、学习特定对话风格、以及测试评估答案以保持项目质量。\n\n\n#",
        " 三、sprig AI 是什么？\n该项目虽然从 LangChain 和 LlamaIndex [ˈlɑ:mə] 等著名的 Python 项目中汲取灵感，但 Spring AI 并不是这些项目的直接移植。 该项目的成立相信，下一波生成式人工智能应用程序将不仅适用于 Python 开发人员，而是将在许多编程语言中无处不在。\nSpring AI 的核心是提供抽象，这些抽象是开发 AI 应用程序的基础。 这些抽象具有多种实现，只需最少的代码更改即可轻松交换组件。 例如，Spring AI 引入了 AiClient 接口，其中包含 OpenAI 和 Azure（ˈæʒə(r) ai re（翘舌）） OpenAI 的实现。\n除了这些核心抽象之外，Spring AI还旨在提供更高级别的功能来解决常见的用例，例如“对文档的问答”或“与文档聊天”。 随着用例复杂性的增加，Spring AI 项目将与 Spring 生态系统中的其他项目集成，例如 Spring Integration（ˌɪntɪˈɡreɪʃ(ə)n/）、Spring Batch（bætʃ） 和 Spring Data。\n为了简化设置，Spring Boot Starters 可用于帮助设置基本的依赖项和类。 此外，还有一组示例应用程序可帮助您探索项目的功能。 最后，新的 Spring CLI 项目还使您能够快速开始使用新项目或向现有应用程序添加 AI 功能的命令。\n```\nspring boot new ai \nspring boot add ai\n\n```\n\n#",
        " 四、spring AI中的 概念\n##",
        " 4.1、模型（Models）\n人工智能模型是旨在处理和生成信息的算法，通常模仿人类的认知功能。 通过从大型数据集中学习模式和见解，这些模型可以进行预测、文本、图像或其他输出，从而增强跨行业的各种应用。\n有许多不同类型的 AI 模型，每种模型都适合特定的用例。 虽然 ChatGPT 及其生成式 AI 功能通过文本输入和输出吸引了用户，但许多模型和公司提供多样化的输入和输出。 在 ChatGPT 出现之前，很多人都对 Midjourney 和 Stable Diffusion 等文本到图像生成模型着迷。\n下表根据输入和输出类型对多个模型进行了分类。\nSpring AI 最初的重点是处理语言输入并提供语言输出的模型，最初是 OpenAI + Azure OpenAI。 上表中的最后一行接受文本作为输入和输出编号，通常称为“嵌入文本”，表示 AI 模型中使用的内部数据结构。 Spring AI 支持嵌入以支持更高级的用例。\nGPT 等模型的与众不同之处在于它们的预训练性质，正如 GPT 中的“P”所示——聊天生成式预训练转换器。 这种预训练功能将 AI 转变为通用的开发人员工具，不需要广泛的机器学习或模型训练背景。\n[17]\n##",
        " 4.2、提示（Prompts）\n提示是指导 AI 模型生成特定输出的基于语言的输入的基础。 对于那些熟悉 ChatGPT 的人来说，提示可能看起来只是输入到发送到 API 的对话框中的文本。 然而，它包含的远不止于此。 在许多 AI 模型中，提示的文本不仅仅是一个简单的字符串。\nChatGPT 的 API 在一个提示中有多个文本输入，每个文本输入都被分配了一个角色。 例如，存在系统角色，它指示模型如何行为并设置交互的上下文。 还有用户角色，通常是来自用户的输入。\n制作有效的提示既是一门艺术，也是一门科学。 ChatGPT 专为人类对话而设计。 这与使用SQL之类的东西来“提出问题”有很大的不同。 一个人必须与人工智能模型进行交流，类似于与另一个人交谈。\n这种交互方式的重要性如此之大，以至于“提示工程”一词已经成为一门独立的学科。 有一系列新兴的技术可以提高提示的有效性。 花时间制作提示可以大大提高最终的输出。\n分享提示已成为一种公共实践，并且正在就此主题进行积极的学术研究。 例如，与SQL相比，创建有效的提示是多么违反直觉，最近的研究论文发现，您可以使用的最有效的提示之一以短语开头，“深呼吸，逐步解决这个问题”。 这应该让你知道语言是多么重要。 我们还不完全了解如何最有效地利用这项技术的先前迭代，例如 ChatGPT 3.5，更不用说正在开发的新版本了。\n  1. 提示是一种基于语言的输入，用于引导人工智能模型生成特定输出。它不仅仅是文本字符串，对于ChatGPT等模型，提示可以包含多个文本输入，并分配给不同的角色，如系统角色和用户角色。\n  2. 制作有效的提示是一门艺术和科学，它需要考虑如何与人工智能模型进行交互，类似于与另一个人进行对话，而不仅仅是提出问题。这种交互方式的重要性导致了\"提示工程\"成为一个独立的学科。\n  3. 研究表明，创建有效的提示可以大大提高最终生成的输出。目前，有许多新兴技术旨在提高提示的有效性，并正在积极研究这一主题。\n  4. 分享提示已成为一种公共实践，学术界也在积极研究此领域。最近的研究发现，一个有效的提示可能以不太直观的方式开始，例如以短语\"深呼吸，逐步解决这个问题\"为开头，强调了语言在提示中的重要性。\n  5. 尽管已经有一些迭代的模型（如ChatGPT 3.5）存在，但我们仍然没有完全理解如何最有效地利用提示技术，尤其是考虑到正在开发的新版本。\n\n\n##",
        " 4.3、提示模板（Prompt Templates）\n创建有效的提示涉及建立请求的上下文，并将请求的某些部分替换为特定于用户输入的值。\n此过程利用传统的基于文本的模板引擎进行提示创建和管理。 Spring AI 为此使用了 OSS 库 StringTemplate。\n例如，考虑简单的提示模板：\n```\nTell me a {adjective} joke about {content}.\nCopied!\n```\n\n在 Spring AI 中，提示模板可以比作 Spring MVC 架构中的“视图”。 提供模型对象（通常为 java.util.Map，用于填充模板中的占位符）。 “rendered”字符串成为提供给 AI 模型的 Prompt 的内容。\n发送到模型的 Prompt 的特定数据格式存在相当大的差异。 提示最初是简单的字符串，后来发展到包含多条消息，其中每条消息中的每个字符串都表示模型的不同角色。\n##",
        " 4.4、令 牌（Tokens）\n令牌是 AI 模型工作方式的构建块。 在输入时，模型将单词转换为标记，在输出时，它们将标记转换回单词。\n在英语中，一个标记大致相当于一个单词的 75%。作为参考，莎士比亚的全集总计约 900,000 字，相当于大约 1 万个代币。\n也许更重要的是代币 = $。\n在托管 AI 模型的上下文中，费用由使用的令牌数量决定。输入和输出都会影响总令牌计数。\n此外，模型还受令牌限制的约束，这些限制限制了单个 API 调用中处理的文本量。 此阈值通常称为“上下文窗口”。模型不会处理任何超过此限制的文本。\n例如，ChatGPT3 有 4K 代币限制，而 GPT4 提供不同的选项，例如 8K、16K 和 32K。 Anthopic 的 Claude AI 模型具有 100K 代币限制，Meta 最近的研究产生了 1M 代币限制模型。\n要用 GPT4 总结莎士比亚的作品，您需要设计软件工程策略来切碎数据并在模型的上下文窗口限制内呈现数据。 这是 Spring AI 项目可以帮助您解决的一个领域。\n###",
        "\n##",
        " 4.5、输出解析（Output Parsing）\n传统上，AI 模型的输出以 的形式出现，即使您要求回复采用 JSON 格式。 它可能是正确的 JSON，但它不是 JSON 数据结构。它只是一个字符串。 此外，在提示中询问“for JSON”并不是 100% 准确的。java.util.String\n这种复杂性导致了一个专门领域的出现，该领域涉及创建提示以产生预期的输出，然后将生成的简单字符串解析为可用于应用程序集成的可用数据结构。\n输出解析采用精心设计的提示，通常需要与模型进行多次交互才能实现所需的格式设置。\n这一挑战促使 OpenAI 引入了“OpenAI 函数”，以精确地从模型中指定所需的输出格式。\n##",
        " 4.6、链接调用（Chaining Calls）\n链是一个概念，表示对 AI 模型的一系列调用。 它使用一个调用的输出作为另一个调用的输入。\n通过将调用链接在一起，您可以通过组合多个链的管道来支持复杂的用例。\n##",
        " 4.7、将数据引入 AI 模型\n如何为AI模型配备未经训练的信息？\n需要注意的是，GPT 3.5/4.0 数据集仅持续到 2021 年 650 月。 因此，该模型会说它不知道该日期之后需要知识的问题的答案。 一个有趣的琐事是，这个数据集大约是~<>GB。\n有两种技术可用于自定义 AI 模型以合并数据：\n  1. 微调：这种传统的机器学习技术涉及定制模型并更改其内部权重。 然而，对于机器学习专家来说，这是一个具有挑战性的过程，并且由于 GPT 的大小，对于像 GPT 这样的模型来说，这是一个非常耗费资源的过程。此外，某些型号可能不提供此选项。\n  2. 提示填充：更实用的替代方法是将数据嵌入到提供给模型的提示中。给定模型的令牌限制，需要技术在模型的上下文窗口中显示相关数据。 这种方法通俗地称为“填充提示”。\n\n\nSpring AI 库可帮助您实现基于“提示填充”技术的解决方案，否则称为检索增强生成\n###",
        "\n##",
        " 4.8、检索增强生成\n一种称为检索增强生成 （RAG） 的技术已经出现，以解决将相关数据整合到提示中以实现准确 AI 模型响应的挑战。\n该方法涉及批处理风格的编程模型，其中作业从文档中读取非结构化数据，对其进行转换，然后将其写入向量数据库。 概括地说，这是一个 ETL（提取、转换和加载）管道。 向量数据库将用于RAG技术的检索部分。\n作为将非结构化数据加载到向量数据库的一部分，最重要的转换之一是将原始文档拆分为更小的部分。 将原始文档拆分为更小部分的过程有两个重要步骤。\n  1. 将文档拆分为多个部分，同时保留内容的语义边界。 例如，对于包含段落和表格的文档，应避免将文档拆分在段落或表格的中间。 对于代码，请避免在方法实现的中间拆分代码。\n  2. 将文档的各个部分进一步拆分为大小仅占 AI 模型令牌限制的一小部分的部分。\n\n\nRAG 的下一阶段是处理用户输入。 当 AI 模型要回答用户的问题时，该问题以及所有“相似”文档片段将被放入发送到 AI 模型的提示中。 这就是使用矢量数据库的原因，它非常擅长查找“相似”的内容。\n在实现 RAG 时使用了几个概念。 这些概念映射到 Spring AI 中的类。 下面简要介绍这些内容\n  * DocumentReader这是一个 Java 功能接口，负责从数据源加载常见的数据源包括 PDF、Markdown 和 JSON。List<Document>\n  * Document数据源的基于文本的表示形式，其中还包含用于描述内容的元数据。\n  * DocumentTransformer这负责以各种方式处理数据，例如将文档拆分为更小的部分或向 .Document\n  * DocumentWriter这允许您将文档持久化到数据库中，在 AI 堆栈中最常见，即矢量数据库。\n  * Embedding这是您的数据表示形式，矢量数据库使用它来计算用户查询与相关文档的“相似性”。List<Double>\n\n\n###",
        "\n##",
        " 4.9、评估 AI 响应\n根据用户请求有效评估人工智能系统的输出对于确保最终应用程序的准确性和有用性非常重要。 一些新兴技术允许将预训练模型本身用于此目的。\n此评估过程涉及分析生成的响应是否与用户的意图和查询上下文一致。相关性、连贯性和事实正确性等指标用于衡量 AI 生成的响应的质量。\n一种方法涉及呈现用户的请求和 AI 模型对模型的响应，查询响应是否与提供的数据一致。\n此外，利用媒介数据库中存储的信息作为补充数据可以加强评估过程，有助于确定反应相关性。\nSpring AI 项目目前提供了一些非常基本的示例，说明如何以提示的形式评估响应以包含在 JUnit 测试中。\n###",
        "\n#",
        " 五、spring AI应用\n上面介绍了spring AI他是集成了 Azure OpenAI 和 OpenAI 作为后端。所以有两种api方式。\n###",
        "\n##",
        " 5.1、配置\n###",
        "\n###",
        " 5.1.1、OpenAI\n首先需要在创建账户在 OpenAI Signup[18] 创建一个帐户，并在 API Keys[19] 中生成令牌。\nSpring AI 项目定义了一个名为 的配置属性，应将其设置为从 获取的值。\n```\nspring.ai.openai.api-key API Key openai.com\n```\n\n导出环境变量是设置该配置属性的一种方法。\n```\nexport SPRING_AI_OPENAI_API_KEY=<INSERT KEY HERE>\n```\n\n###",
        "\n###",
        " 5.1.2、Azure OpenAI\n获取 Azure OpenAI 和 Azure 门户上的“Azure[20] OpenAI 服务”部分。endpointapi-key\nSpring AI 项目定义了一个配置属性，该属性应设置为从 Azure 获取的值。 此外，还存在一个名为 configuraiton 的属性，应将其设置为在 Azure 中预配模型时获取的终结点 URL。\n```\nspring.ai.azure.openai.api-keyAPI Keyspring.ai.azure.openai.endpoint\n```\n\n导出环境变量是设置这些配置属性的一种方法。\n```\nexport SPRING_AI_AZURE_OPENAI_API_KEY=<INSERT KEY HERE>\nexport SPRING_AI_AZURE_OPENAI_ENDPOINT=<INSERT ENDPOINT URL HERE>\n\n```\n\n###",
        " 5.1.3、Ollama\n1、简介 Ollama 是一款命令行工具，可在 macOS 和 Linux 上本地运行 Llama 2、Code Llama 和其他模型 旨在帮助您在本地运行大型语言模型。使用 Llama，您可以根据需要轻松自定义和创建语言模型。 Llama 允许你在不依赖基于云的平台的情况下利用 AI 的力量。 在本地启动并运行大型语言模型。\n2、下载安装 目前适用于 macOS 和 Linux ；Windows 即将推出\n3、引入架包\n<dependency>\n<groupId>org.springframework.ai</groupId>\n<artifactId>spring-ai-ollama</artifactId>\n<version>0.8.0-SNAPSHOT</version>\n</dependency>\n###",
        "目录\n  1. 一、spring AI 目的\n  2. 二、spring AI 来源\n  3. 三、sprig AI 是什么？\n  4. 四、spring AI中的 概念\n  5.     1. 4.1、模型（Models）\n    2. 4.2、提示（Prompts）\n    3. 4.3、提示模板（Prompt Templates）\n    4. 4.4、令 牌（Tokens）\n    5. 4.5、输出解析（Output Parsing）\n    6. 4.6、链接调用（Chaining Calls）\n    7. 4.7、将数据引入 AI 模型\n    8. 4.8、检索增强生成\n    9. 4.9、评估 AI 响应\n  6. 五、spring AI应用\n  7. 5.1、配置\n  8.     1. 5.1.1、OpenAI\n    2. 5.1.2、Azure OpenAI\n    3. 5.1.3、Ollama\n    4. 5.1.4、HuggingFace\n\n\n##",
        "目录\n  1. 一、spring AI 目的\n  2. 二、spring AI 来源\n  3. 三、sprig AI 是什么？\n  4. 四、spring AI中的 概念\n  5.     1. 4.1、模型（Models）\n    2. 4.2、提示（Prompts）\n    3. 4.3、提示模板（Prompt Templates）\n    4. 4.4、令 牌（Tokens）\n    5. 4.5、输出解析（Output Parsing）\n    6. 4.6、链接调用（Chaining Calls）\n    7. 4.7、将数据引入 AI 模型\n    8. 4.8、检索增强生成\n    9. 4.9、评估 AI 响应\n  6. 五、spring AI应用\n  7. 5.1、配置\n  8.     1. 5.1.1、OpenAI\n    2. 5.1.2、Azure OpenAI\n    3. 5.1.3、Ollama\n    4. 5.1.4、HuggingFace\n\n\n##"
    ]
}